apply plugin: 'maven-publish'
apply plugin: 'signing'

def sonatypeRepositoryUrl
if (isReleaseBuild()) {
    println 'RELEASE BUILD'
    sonatypeRepositoryUrl = hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else {
    println 'DEBUG BUILD'
    sonatypeRepositoryUrl = hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('nexusUsername') ? nexusUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('nexusPassword') ? nexusPassword : ""
}


tasks.register('androidJavadocs', Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
}

tasks.register('androidJavadocsJar', Jar) {
    classifier = 'javadoc'
    //basename = artifact_id
    from androidJavadocs.destinationDir
}

tasks.register('androidSourcesJar', Jar) {
    classifier = 'sources'
    //basename = artifact_id
    from android.sourceSets.main.java.sourceFiles
}

publishing {
    repositories {
        maven {
            url = sonatypeRepositoryUrl
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
    publications {
        maven(MavenPublication) {
            afterEvaluate { project ->
                from components.release
                artifact androidSourcesJar
                artifact androidJavadocsJar
                version = project.version
            }

            pom {
                name = POM_NAME
                packaging = POM_PACKAGING
                description = POM_DESCRIPTION
                url = POM_URL
                scm {
                    url = POM_SCM_URL
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                }

                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                        distribution = POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                    }
                }
            }
        }
    }
}


signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("publishing") }
    sign publishing.publications.maven
    sign configurations.archives
}

